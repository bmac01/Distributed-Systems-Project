syntax = "proto3";

package smarthomecontrol;

// Service definitions for Smart Home Control System
//LightService to handle the light toggle controls
//Simple RPC
service LightService {
  rpc ToggleLight (ToggleRequest) returns (ToggleResponse);
  rpc GetStatus (Empty) returns (LightStatus);
}

//Client Side rpc streaming to control brightness setting
service BrightnessService {
  rpc AdjustBrightness (stream BrightnessRequest) returns (BrightnessResponse);
}

//Thermostat Service 
//Simple rpc to set temperature
service ThermostatService {
  rpc SetTemperature (TemperatureRequest) returns (TemperatureResponse);
  
}
//Simple rpc to get current temperature
service TemperatureService {
  rpc GetCurrentTemperature (Empty) returns (CurrentTemperatureResponse);
}


//Security System 
//AlertService - server side rpc to provide alerts to the client
service AlertService {
  rpc GetAlerts (Empty) returns (stream Alert);
}

//SecurityService - client side rpc to activate zones
service SecurityService {
  rpc ActivateZones (stream ZoneActivationRequest) returns (ActivationResponse);
}

// Message definitions
message Empty {}

message Light {
  int32 light_id = 1;
  float brightness = 2;
  bool power_status = 3;
}

message LightStatus {
  repeated Light lights = 1;
}

message ToggleRequest {
  bool status = 1;
}

message ToggleResponse {
  bool result = 1;
  string message = 2;
}


message Alert {
  string message = 1;
  string timestamp = 2;
}

message ZoneActivationRequest {
  int32 zone_id = 1;
  bool activate = 2;
}

message ActivationResponse {
  string message = 1;
}

message TemperatureRequest {
  float temperature = 1;
}

message TemperatureResponse {
  string message = 1;
}

message BrightnessRequest {
  int32 zone_id = 1;
  int32 brightness = 2;
}

message BrightnessResponse {
  string message = 1;
}

message CurrentTemperatureResponse {
  float temperature = 1;
}

//Bidirectional rpc - to check system status 
service SystemStatusService {
  rpc CheckStatus (stream StatusCheckRequest) returns (stream StatusCheckResponse);
}
//Message definitions
message StatusCheckRequest {
  string checkCommand = 1;
}

message StatusCheckResponse {
  string statusMessage = 1;
}